{"ast":null,"code":"// service.ts\nimport { getRequest } from './apiClient';\nimport { mapUserDTOToEntity, mapUsersDTOToEntity } from './userEntity';\n\n// Service to fetch and transform a single user\nexport const getUser = async userId => {\n  const userDTO = await getRequest(`/name/eesti`);\n  return mapUserDTOToEntity(userDTO);\n};\n\n// Service to fetch and transform a list of users\nexport const getUsersList = async () => {\n  const usersListDTO = await getRequest('/all');\n  return mapUsersDTOToEntity(usersListDTO.users);\n};","map":{"version":3,"names":["getRequest","mapUserDTOToEntity","mapUsersDTOToEntity","getUser","userId","userDTO","getUsersList","usersListDTO","users"],"sources":["/Users/cei37/layered-architecture/src/service.ts"],"sourcesContent":["// service.ts\nimport { getRequest } from './apiClient';\nimport { UserDTO, UsersListDTO } from './apiClient';\nimport { UserEntity, mapUserDTOToEntity, mapUsersDTOToEntity } from './userEntity';\n\n// Service to fetch and transform a single user\nexport const getUser = async (userId: number): Promise<UserEntity> => {\n  const userDTO = await getRequest<UserDTO>(`/name/eesti`);\n  return mapUserDTOToEntity(userDTO);\n};\n\n// Service to fetch and transform a list of users\nexport const getUsersList = async (): Promise<UserEntity[]> => {\n  const usersListDTO = await getRequest<UsersListDTO>('/all');\n  return mapUsersDTOToEntity(usersListDTO.users);\n};\n"],"mappings":"AAAA;AACA,SAASA,UAAU,QAAQ,aAAa;AAExC,SAAqBC,kBAAkB,EAAEC,mBAAmB,QAAQ,cAAc;;AAElF;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOC,MAAc,IAA0B;EACpE,MAAMC,OAAO,GAAG,MAAML,UAAU,CAAU,aAAa,CAAC;EACxD,OAAOC,kBAAkB,CAACI,OAAO,CAAC;AACpC,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAmC;EAC7D,MAAMC,YAAY,GAAG,MAAMP,UAAU,CAAe,MAAM,CAAC;EAC3D,OAAOE,mBAAmB,CAACK,YAAY,CAACC,KAAK,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}