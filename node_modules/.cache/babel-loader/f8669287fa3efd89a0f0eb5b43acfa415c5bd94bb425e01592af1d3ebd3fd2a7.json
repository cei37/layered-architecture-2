{"ast":null,"code":"var _s = $RefreshSig$();\n// useUsersList.ts\nimport { useQuery } from 'react-query';\nimport { getUsersList } from './service';\n// Hook for fetching a list of users\nexport const useUsersList = () => {\n  _s();\n  return useQuery('users', getUsersList, {\n    staleTime: 60000,\n    onError: error => {\n      console.error('Failed to fetch users:', error);\n    }\n  });\n};\n_s(useUsersList, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","getUsersList","useUsersList","_s","staleTime","onError","error","console"],"sources":["/Users/cei37/layered-architecture/src/useUsersList.ts"],"sourcesContent":["// useUsersList.ts\nimport { useQuery, UseQueryResult } from 'react-query';\nimport { getUsersList } from './service';\nimport { UserEntity } from './userEntity';\n\n// Hook for fetching a list of users\nexport const useUsersList = (): UseQueryResult<UserEntity[], Error> => {\n  return useQuery('users', getUsersList, {\n    staleTime: 60000,\n    onError: (error: Error) => {\n      console.error('Failed to fetch users:', error);\n    },\n  });\n};\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAwB,aAAa;AACtD,SAASC,YAAY,QAAQ,WAAW;AAGxC;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAA2C;EAAAC,EAAA;EACrE,OAAOH,QAAQ,CAAC,OAAO,EAAEC,YAAY,EAAE;IACrCG,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAGC,KAAY,IAAK;MACzBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC,CAAC;AACJ,CAAC;AAACH,EAAA,CAPWD,YAAY;EAAA,QAChBF,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}