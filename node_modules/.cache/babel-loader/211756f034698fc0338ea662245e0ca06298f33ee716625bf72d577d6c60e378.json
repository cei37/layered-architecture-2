{"ast":null,"code":"// src/services/UserService.ts\nimport{BaseService}from'./BaseService';import{mapUserDTOToEntity}from'../mappers/mappers';export class UserService extends BaseService{async getUser(userId){const userDTO=await this.get(`/users/${userId}`);return mapUserDTOToEntity(userDTO);}async getUsersList(){const usersDTO=await this.get('/users');return usersDTO.map(mapUserDTOToEntity);}async createUser(user){const createdUserDTO=await this.post('/users',user);return mapUserDTOToEntity(createdUserDTO);}async updateUser(userId,user){const updatedUserDTO=await this.put(`/users/${userId}`,user);return mapUserDTOToEntity(updatedUserDTO);}async deleteUser(userId){await this.delete(`/users/${userId}`);}}","map":{"version":3,"names":["BaseService","mapUserDTOToEntity","UserService","getUser","userId","userDTO","get","getUsersList","usersDTO","map","createUser","user","createdUserDTO","post","updateUser","updatedUserDTO","put","deleteUser","delete"],"sources":["/Users/cei37/layered-architecture-2/src/services/UserService.ts"],"sourcesContent":["// src/services/UserService.ts\nimport { BaseService } from './BaseService';\nimport { UserDTO } from '../models/UserDTO';\nimport { UserEntity } from '../models/UserEntity';\nimport { mapUserDTOToEntity, mapUserEntityToDTO } from '../mappers/mappers';\n\nexport class UserService extends BaseService {\n  async getUser(userId: number): Promise<UserEntity> {\n    const userDTO = await this.get<UserDTO>(`/users/${userId}`);\n    return mapUserDTOToEntity(userDTO);\n  }\n\n  async getUsersList(): Promise<UserEntity[]> {\n    const usersDTO = await this.get<UserDTO[]>('/users');\n    return usersDTO.map(mapUserDTOToEntity);\n  }\n\n  async createUser(user: UserDTO): Promise<UserEntity> {\n    const createdUserDTO = await this.post<UserDTO, UserDTO>('/users', user);\n    return mapUserDTOToEntity(createdUserDTO);\n  }\n\n  async updateUser(userId: number, user: UserDTO): Promise<UserEntity> {\n    const updatedUserDTO = await this.put<UserDTO, UserDTO>(`/users/${userId}`, user);\n    return mapUserDTOToEntity(updatedUserDTO);\n  }\n\n  async deleteUser(userId: number): Promise<void> {\n    await this.delete<void>(`/users/${userId}`);\n  }\n}\n"],"mappings":"AAAA;AACA,OAASA,WAAW,KAAQ,eAAe,CAG3C,OAASC,kBAAkB,KAA4B,oBAAoB,CAE3E,MAAO,MAAM,CAAAC,WAAW,QAAS,CAAAF,WAAY,CAC3C,KAAM,CAAAG,OAAOA,CAACC,MAAc,CAAuB,CACjD,KAAM,CAAAC,OAAO,CAAG,KAAM,KAAI,CAACC,GAAG,CAAU,UAAUF,MAAM,EAAE,CAAC,CAC3D,MAAO,CAAAH,kBAAkB,CAACI,OAAO,CAAC,CACpC,CAEA,KAAM,CAAAE,YAAYA,CAAA,CAA0B,CAC1C,KAAM,CAAAC,QAAQ,CAAG,KAAM,KAAI,CAACF,GAAG,CAAY,QAAQ,CAAC,CACpD,MAAO,CAAAE,QAAQ,CAACC,GAAG,CAACR,kBAAkB,CAAC,CACzC,CAEA,KAAM,CAAAS,UAAUA,CAACC,IAAa,CAAuB,CACnD,KAAM,CAAAC,cAAc,CAAG,KAAM,KAAI,CAACC,IAAI,CAAmB,QAAQ,CAAEF,IAAI,CAAC,CACxE,MAAO,CAAAV,kBAAkB,CAACW,cAAc,CAAC,CAC3C,CAEA,KAAM,CAAAE,UAAUA,CAACV,MAAc,CAAEO,IAAa,CAAuB,CACnE,KAAM,CAAAI,cAAc,CAAG,KAAM,KAAI,CAACC,GAAG,CAAmB,UAAUZ,MAAM,EAAE,CAAEO,IAAI,CAAC,CACjF,MAAO,CAAAV,kBAAkB,CAACc,cAAc,CAAC,CAC3C,CAEA,KAAM,CAAAE,UAAUA,CAACb,MAAc,CAAiB,CAC9C,KAAM,KAAI,CAACc,MAAM,CAAO,UAAUd,MAAM,EAAE,CAAC,CAC7C,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}