{"ast":null,"code":"var _s = $RefreshSig$();\n// useUser.ts\nimport { useQuery } from 'react-query';\nimport { getUser } from './service';\n// Hook for fetching a single user\nexport const useUser = userId => {\n  _s();\n  return useQuery(['user', userId], () => getUser(userId), {\n    staleTime: 60000,\n    onError: error => {\n      console.error('Failed to fetch user:', error);\n    }\n  });\n};\n_s(useUser, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","getUser","useUser","userId","_s","staleTime","onError","error","console"],"sources":["/Users/cei37/layered-architecture/src/useUser.ts"],"sourcesContent":["// useUser.ts\nimport { useQuery, UseQueryResult } from 'react-query';\nimport { getUser } from './service';\nimport { UserEntity } from './userEntity';\n\n// Hook for fetching a single user\nexport const useUser = (userId: number): UseQueryResult<UserEntity, Error> => {\n  return useQuery(['user', userId], () => getUser(userId), {\n    staleTime: 60000,\n    onError: (error: Error) => {\n      console.error('Failed to fetch user:', error);\n    },\n  });\n};\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAwB,aAAa;AACtD,SAASC,OAAO,QAAQ,WAAW;AAGnC;AACA,OAAO,MAAMC,OAAO,GAAIC,MAAc,IAAwC;EAAAC,EAAA;EAC5E,OAAOJ,QAAQ,CAAC,CAAC,MAAM,EAAEG,MAAM,CAAC,EAAE,MAAMF,OAAO,CAACE,MAAM,CAAC,EAAE;IACvDE,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAGC,KAAY,IAAK;MACzBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,CAAC;AACJ,CAAC;AAACH,EAAA,CAPWF,OAAO;EAAA,QACXF,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}