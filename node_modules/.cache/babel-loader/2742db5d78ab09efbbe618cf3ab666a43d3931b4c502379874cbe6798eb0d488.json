{"ast":null,"code":"// src/hooks/useUser.ts\nimport{useQuery,useMutation,useQueryClient}from'react-query';import{UserService}from'../services/UserService';import{AxiosHttpClient}from'../api/AxiosHttpClient';import{mapUserEntityToDTO}from'../mappers/mappers';const userService=new UserService(new AxiosHttpClient('https://api.example.com'));export const useUser=userId=>{return useQuery(['user',userId],()=>userService.getUser(userId));};export const useUsersList=()=>{return useQuery(['users'],()=>userService.getUsersList());};export const useCreateUser=()=>{const queryClient=useQueryClient();return useMutation(newUser=>{const dto=mapUserEntityToDTO(newUser);return userService.createUser(dto);},{onSuccess:()=>{queryClient.invalidateQueries(['users']);// Refetch the list\n}});};export const useUpdateUser=()=>{const queryClient=useQueryClient();return useMutation(updatedUser=>{const dto=mapUserEntityToDTO(updatedUser);return userService.updateUser(updatedUser.id,dto);},{onSuccess:data=>{queryClient.invalidateQueries(['user',data.id]);queryClient.invalidateQueries(['users']);}});};export const useDeleteUser=()=>{const queryClient=useQueryClient();return useMutation(userId=>userService.deleteUser(userId),{onSuccess:()=>{queryClient.invalidateQueries(['users']);// Refetch the list\n}});};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","UserService","AxiosHttpClient","mapUserEntityToDTO","userService","useUser","userId","getUser","useUsersList","getUsersList","useCreateUser","queryClient","newUser","dto","createUser","onSuccess","invalidateQueries","useUpdateUser","updatedUser","updateUser","id","data","useDeleteUser","deleteUser"],"sources":["/Users/cei37/layered-architecture-2/src/hooks/useUser.ts"],"sourcesContent":["// src/hooks/useUser.ts\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { UserService } from '../services/UserService';\nimport { UserEntity } from '../models/UserEntity';\nimport { AxiosHttpClient } from '../api/AxiosHttpClient';\nimport { mapUserEntityToDTO } from '../mappers/mappers';\n\nconst userService = new UserService(new AxiosHttpClient('https://api.example.com'));\n\nexport const useUser = (userId: number) => {\n  return useQuery<UserEntity, Error>(['user', userId], () => userService.getUser(userId));\n};\n\nexport const useUsersList = () => {\n  return useQuery<UserEntity[], Error>(['users'], () => userService.getUsersList());\n};\n\nexport const useCreateUser = () => {\n  const queryClient = useQueryClient();\n  return useMutation((newUser: UserEntity) => {\n    const dto = mapUserEntityToDTO(newUser);\n    return userService.createUser(dto);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['users']); // Refetch the list\n    }\n  });\n};\n\nexport const useUpdateUser = () => {\n  const queryClient = useQueryClient();\n  return useMutation((updatedUser: UserEntity) => {\n    const dto = mapUserEntityToDTO(updatedUser);\n    return userService.updateUser(updatedUser.id, dto);\n  }, {\n    onSuccess: (data) => {\n      queryClient.invalidateQueries(['user', data.id]);\n      queryClient.invalidateQueries(['users']);\n    }\n  });\n};\n\nexport const useDeleteUser = () => {\n  const queryClient = useQueryClient();\n  return useMutation((userId: number) => userService.deleteUser(userId), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['users']); // Refetch the list\n    }\n  });\n};\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,WAAW,CAAEC,cAAc,KAAQ,aAAa,CACnE,OAASC,WAAW,KAAQ,yBAAyB,CAErD,OAASC,eAAe,KAAQ,wBAAwB,CACxD,OAASC,kBAAkB,KAAQ,oBAAoB,CAEvD,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAH,WAAW,CAAC,GAAI,CAAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC,CAEnF,MAAO,MAAM,CAAAG,OAAO,CAAIC,MAAc,EAAK,CACzC,MAAO,CAAAR,QAAQ,CAAoB,CAAC,MAAM,CAAEQ,MAAM,CAAC,CAAE,IAAMF,WAAW,CAACG,OAAO,CAACD,MAAM,CAAC,CAAC,CACzF,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGA,CAAA,GAAM,CAChC,MAAO,CAAAV,QAAQ,CAAsB,CAAC,OAAO,CAAC,CAAE,IAAMM,WAAW,CAACK,YAAY,CAAC,CAAC,CAAC,CACnF,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAC,WAAW,CAAGX,cAAc,CAAC,CAAC,CACpC,MAAO,CAAAD,WAAW,CAAEa,OAAmB,EAAK,CAC1C,KAAM,CAAAC,GAAG,CAAGV,kBAAkB,CAACS,OAAO,CAAC,CACvC,MAAO,CAAAR,WAAW,CAACU,UAAU,CAACD,GAAG,CAAC,CACpC,CAAC,CAAE,CACDE,SAAS,CAAEA,CAAA,GAAM,CACfJ,WAAW,CAACK,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAE;AAC5C,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAN,WAAW,CAAGX,cAAc,CAAC,CAAC,CACpC,MAAO,CAAAD,WAAW,CAAEmB,WAAuB,EAAK,CAC9C,KAAM,CAAAL,GAAG,CAAGV,kBAAkB,CAACe,WAAW,CAAC,CAC3C,MAAO,CAAAd,WAAW,CAACe,UAAU,CAACD,WAAW,CAACE,EAAE,CAAEP,GAAG,CAAC,CACpD,CAAC,CAAE,CACDE,SAAS,CAAGM,IAAI,EAAK,CACnBV,WAAW,CAACK,iBAAiB,CAAC,CAAC,MAAM,CAAEK,IAAI,CAACD,EAAE,CAAC,CAAC,CAChDT,WAAW,CAACK,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAC1C,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAM,aAAa,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAAX,WAAW,CAAGX,cAAc,CAAC,CAAC,CACpC,MAAO,CAAAD,WAAW,CAAEO,MAAc,EAAKF,WAAW,CAACmB,UAAU,CAACjB,MAAM,CAAC,CAAE,CACrES,SAAS,CAAEA,CAAA,GAAM,CACfJ,WAAW,CAACK,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAE;AAC5C,CACF,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}