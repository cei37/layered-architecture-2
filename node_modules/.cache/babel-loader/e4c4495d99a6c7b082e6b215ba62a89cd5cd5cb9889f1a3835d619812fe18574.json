{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// src/hooks/useUser.ts\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { UserService } from '../services/UserService';\nimport { AxiosHttpClient } from '../api/AxiosHttpClient';\nimport { mapUserEntityToDTO } from '../mappers/mappers';\nconst userService = new UserService(new AxiosHttpClient('https://api.example.com'));\nexport const useUser = userId => {\n  _s();\n  return useQuery(['user', userId], () => userService.getUser(userId));\n};\n_s(useUser, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useUsersList = () => {\n  _s2();\n  return useQuery(['users'], () => userService.getUsersList());\n};\n_s2(useUsersList, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCreateUser = () => {\n  _s3();\n  const queryClient = useQueryClient();\n  return useMutation(newUser => {\n    const dto = mapUserEntityToDTO(newUser);\n    return userService.createUser(dto);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['users']); // Refetch the list\n    }\n  });\n};\n_s3(useCreateUser, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useUpdateUser = () => {\n  _s4();\n  const queryClient = useQueryClient();\n  return useMutation(updatedUser => {\n    const dto = mapUserEntityToDTO(updatedUser);\n    return userService.updateUser(updatedUser.id, dto);\n  }, {\n    onSuccess: data => {\n      queryClient.invalidateQueries(['user', data.id]);\n      queryClient.invalidateQueries(['users']);\n    }\n  });\n};\n_s4(useUpdateUser, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteUser = () => {\n  _s5();\n  const queryClient = useQueryClient();\n  return useMutation(userId => userService.deleteUser(userId), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['users']); // Refetch the list\n    }\n  });\n};\n_s5(useDeleteUser, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","UserService","AxiosHttpClient","mapUserEntityToDTO","userService","useUser","userId","_s","getUser","useUsersList","_s2","getUsersList","useCreateUser","_s3","queryClient","newUser","dto","createUser","onSuccess","invalidateQueries","useUpdateUser","_s4","updatedUser","updateUser","id","data","useDeleteUser","_s5","deleteUser"],"sources":["/Users/cei37/layered-architecture-2/src/hooks/useUser.ts"],"sourcesContent":["// src/hooks/useUser.ts\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { UserService } from '../services/UserService';\nimport { UserEntity } from '../models/UserEntity';\nimport { AxiosHttpClient } from '../api/AxiosHttpClient';\nimport { mapUserEntityToDTO } from '../mappers/mappers';\n\nconst userService = new UserService(new AxiosHttpClient('https://api.example.com'));\n\nexport const useUser = (userId: number) => {\n  return useQuery<UserEntity, Error>(['user', userId], () => userService.getUser(userId));\n};\n\nexport const useUsersList = () => {\n  return useQuery<UserEntity[], Error>(['users'], () => userService.getUsersList());\n};\n\nexport const useCreateUser = () => {\n  const queryClient = useQueryClient();\n  return useMutation((newUser: UserEntity) => {\n    const dto = mapUserEntityToDTO(newUser);\n    return userService.createUser(dto);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['users']); // Refetch the list\n    }\n  });\n};\n\nexport const useUpdateUser = () => {\n  const queryClient = useQueryClient();\n  return useMutation((updatedUser: UserEntity) => {\n    const dto = mapUserEntityToDTO(updatedUser);\n    return userService.updateUser(updatedUser.id, dto);\n  }, {\n    onSuccess: (data) => {\n      queryClient.invalidateQueries(['user', data.id]);\n      queryClient.invalidateQueries(['users']);\n    }\n  });\n};\n\nexport const useDeleteUser = () => {\n  const queryClient = useQueryClient();\n  return useMutation((userId: number) => userService.deleteUser(userId), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['users']); // Refetch the list\n    }\n  });\n};\n"],"mappings":";;;;;AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACnE,SAASC,WAAW,QAAQ,yBAAyB;AAErD,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,kBAAkB,QAAQ,oBAAoB;AAEvD,MAAMC,WAAW,GAAG,IAAIH,WAAW,CAAC,IAAIC,eAAe,CAAC,yBAAyB,CAAC,CAAC;AAEnF,OAAO,MAAMG,OAAO,GAAIC,MAAc,IAAK;EAAAC,EAAA;EACzC,OAAOT,QAAQ,CAAoB,CAAC,MAAM,EAAEQ,MAAM,CAAC,EAAE,MAAMF,WAAW,CAACI,OAAO,CAACF,MAAM,CAAC,CAAC;AACzF,CAAC;AAACC,EAAA,CAFWF,OAAO;EAAA,QACXP,QAAQ;AAAA;AAGjB,OAAO,MAAMW,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,OAAOZ,QAAQ,CAAsB,CAAC,OAAO,CAAC,EAAE,MAAMM,WAAW,CAACO,YAAY,CAAC,CAAC,CAAC;AACnF,CAAC;AAACD,GAAA,CAFWD,YAAY;EAAA,QAChBX,QAAQ;AAAA;AAGjB,OAAO,MAAMc,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMC,WAAW,GAAGd,cAAc,CAAC,CAAC;EACpC,OAAOD,WAAW,CAAEgB,OAAmB,IAAK;IAC1C,MAAMC,GAAG,GAAGb,kBAAkB,CAACY,OAAO,CAAC;IACvC,OAAOX,WAAW,CAACa,UAAU,CAACD,GAAG,CAAC;EACpC,CAAC,EAAE;IACDE,SAAS,EAAEA,CAAA,KAAM;MACfJ,WAAW,CAACK,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;AAACN,GAAA,CAVWD,aAAa;EAAA,QACJZ,cAAc,EAC3BD,WAAW;AAAA;AAUpB,OAAO,MAAMqB,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMP,WAAW,GAAGd,cAAc,CAAC,CAAC;EACpC,OAAOD,WAAW,CAAEuB,WAAuB,IAAK;IAC9C,MAAMN,GAAG,GAAGb,kBAAkB,CAACmB,WAAW,CAAC;IAC3C,OAAOlB,WAAW,CAACmB,UAAU,CAACD,WAAW,CAACE,EAAE,EAAER,GAAG,CAAC;EACpD,CAAC,EAAE;IACDE,SAAS,EAAGO,IAAI,IAAK;MACnBX,WAAW,CAACK,iBAAiB,CAAC,CAAC,MAAM,EAAEM,IAAI,CAACD,EAAE,CAAC,CAAC;MAChDV,WAAW,CAACK,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1C;EACF,CAAC,CAAC;AACJ,CAAC;AAACE,GAAA,CAXWD,aAAa;EAAA,QACJpB,cAAc,EAC3BD,WAAW;AAAA;AAWpB,OAAO,MAAM2B,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMb,WAAW,GAAGd,cAAc,CAAC,CAAC;EACpC,OAAOD,WAAW,CAAEO,MAAc,IAAKF,WAAW,CAACwB,UAAU,CAACtB,MAAM,CAAC,EAAE;IACrEY,SAAS,EAAEA,CAAA,KAAM;MACfJ,WAAW,CAACK,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;AAACQ,GAAA,CAPWD,aAAa;EAAA,QACJ1B,cAAc,EAC3BD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}