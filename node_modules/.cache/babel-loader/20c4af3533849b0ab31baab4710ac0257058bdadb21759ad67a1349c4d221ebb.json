{"ast":null,"code":"// src/services/UserService.ts\nimport { BaseService } from './BaseService';\nimport { mapUserDTOToEntity } from '../mappers/mappers';\nexport class UserService extends BaseService {\n  async getUser(userId) {\n    const userDTO = await this.get(`/users/${userId}`);\n    return mapUserDTOToEntity(userDTO);\n  }\n  async getUsersList() {\n    const usersDTO = await this.get('/users');\n    return usersDTO.map(mapUserDTOToEntity);\n  }\n  async createUser(user) {\n    const createdUserDTO = await this.post('/users', user);\n    return mapUserDTOToEntity(createdUserDTO);\n  }\n  async updateUser(userId, user) {\n    const updatedUserDTO = await this.put(`/users/${userId}`, user);\n    return mapUserDTOToEntity(updatedUserDTO);\n  }\n  async deleteUser(userId) {\n    await this.delete(`/users/${userId}`);\n  }\n\n  // Additional operation: Activate a user\n  async activateUser(userId) {\n    const activatedUserDTO = await this.post(`/users/${userId}/activate`, {});\n    return mapUserDTOToEntity(activatedUserDTO);\n  }\n\n  // Additional operation: Reset a user's password\n  async resetPassword(userId) {\n    await this.post(`/users/${userId}/reset-password`, {});\n  }\n\n  // Additional operation: Search users by criteria\n  async searchUsers(criteria) {\n    const usersDTO = await this.get(`/users/search`, {\n      criteria\n    });\n    return usersDTO.map(mapUserDTOToEntity);\n  }\n}","map":{"version":3,"names":["BaseService","mapUserDTOToEntity","UserService","getUser","userId","userDTO","get","getUsersList","usersDTO","map","createUser","user","createdUserDTO","post","updateUser","updatedUserDTO","put","deleteUser","delete","activateUser","activatedUserDTO","resetPassword","searchUsers","criteria"],"sources":["/Users/cei37/layered-architecture-2/src/services/UserService.ts"],"sourcesContent":["// src/services/UserService.ts\nimport { BaseService } from './BaseService';\nimport { UserDTO } from '../models/UserDTO';\nimport { UserEntity } from '../models/UserEntity';\nimport { mapUserDTOToEntity, mapUserEntityToDTO } from '../mappers/mappers';\n\nexport class UserService extends BaseService {\n  async getUser(userId: number): Promise<UserEntity> {\n    const userDTO = await this.get<UserDTO>(`/users/${userId}`);\n    return mapUserDTOToEntity(userDTO);\n  }\n\n  async getUsersList(): Promise<UserEntity[]> {\n    const usersDTO = await this.get<UserDTO[]>('/users');\n    return usersDTO.map(mapUserDTOToEntity);\n  }\n\n  async createUser(user: UserDTO): Promise<UserEntity> {\n    const createdUserDTO = await this.post<UserDTO, UserDTO>('/users', user);\n    return mapUserDTOToEntity(createdUserDTO);\n  }\n\n  async updateUser(userId: number, user: UserDTO): Promise<UserEntity> {\n    const updatedUserDTO = await this.put<UserDTO, UserDTO>(`/users/${userId}`, user);\n    return mapUserDTOToEntity(updatedUserDTO);\n  }\n\n  async deleteUser(userId: number): Promise<void> {\n    await this.delete<void>(`/users/${userId}`);\n  }\n\n\n  // Additional operation: Activate a user\n  async activateUser(userId: number): Promise<UserEntity> {\n    const activatedUserDTO = await this.post<UserDTO, void>(`/users/${userId}/activate`, {});\n    return mapUserDTOToEntity(activatedUserDTO);\n  }\n\n  // Additional operation: Reset a user's password\n  async resetPassword(userId: number): Promise<void> {\n    await this.post<void, void>(`/users/${userId}/reset-password`, {});\n  }\n\n  // Additional operation: Search users by criteria\n  async searchUsers(criteria: string): Promise<UserEntity[]> {\n    const usersDTO = await this.get<UserDTO[]>(`/users/search`, { criteria });\n    return usersDTO.map(mapUserDTOToEntity);\n  }\n\n}\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,eAAe;AAG3C,SAASC,kBAAkB,QAA4B,oBAAoB;AAE3E,OAAO,MAAMC,WAAW,SAASF,WAAW,CAAC;EAC3C,MAAMG,OAAOA,CAACC,MAAc,EAAuB;IACjD,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,GAAG,CAAU,UAAUF,MAAM,EAAE,CAAC;IAC3D,OAAOH,kBAAkB,CAACI,OAAO,CAAC;EACpC;EAEA,MAAME,YAAYA,CAAA,EAA0B;IAC1C,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACF,GAAG,CAAY,QAAQ,CAAC;IACpD,OAAOE,QAAQ,CAACC,GAAG,CAACR,kBAAkB,CAAC;EACzC;EAEA,MAAMS,UAAUA,CAACC,IAAa,EAAuB;IACnD,MAAMC,cAAc,GAAG,MAAM,IAAI,CAACC,IAAI,CAAmB,QAAQ,EAAEF,IAAI,CAAC;IACxE,OAAOV,kBAAkB,CAACW,cAAc,CAAC;EAC3C;EAEA,MAAME,UAAUA,CAACV,MAAc,EAAEO,IAAa,EAAuB;IACnE,MAAMI,cAAc,GAAG,MAAM,IAAI,CAACC,GAAG,CAAmB,UAAUZ,MAAM,EAAE,EAAEO,IAAI,CAAC;IACjF,OAAOV,kBAAkB,CAACc,cAAc,CAAC;EAC3C;EAEA,MAAME,UAAUA,CAACb,MAAc,EAAiB;IAC9C,MAAM,IAAI,CAACc,MAAM,CAAO,UAAUd,MAAM,EAAE,CAAC;EAC7C;;EAGA;EACA,MAAMe,YAAYA,CAACf,MAAc,EAAuB;IACtD,MAAMgB,gBAAgB,GAAG,MAAM,IAAI,CAACP,IAAI,CAAgB,UAAUT,MAAM,WAAW,EAAE,CAAC,CAAC,CAAC;IACxF,OAAOH,kBAAkB,CAACmB,gBAAgB,CAAC;EAC7C;;EAEA;EACA,MAAMC,aAAaA,CAACjB,MAAc,EAAiB;IACjD,MAAM,IAAI,CAACS,IAAI,CAAa,UAAUT,MAAM,iBAAiB,EAAE,CAAC,CAAC,CAAC;EACpE;;EAEA;EACA,MAAMkB,WAAWA,CAACC,QAAgB,EAAyB;IACzD,MAAMf,QAAQ,GAAG,MAAM,IAAI,CAACF,GAAG,CAAY,eAAe,EAAE;MAAEiB;IAAS,CAAC,CAAC;IACzE,OAAOf,QAAQ,CAACC,GAAG,CAACR,kBAAkB,CAAC;EACzC;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}